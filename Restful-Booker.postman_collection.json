{
	"info": {
		"_postman_id": "75713490-089a-41c4-8cb0-50ef52113b48",
		"name": "Restful-Booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47554158",
		"_collection_link": "https://tejaboreddy27-1702847.postman.co/workspace/Teja-Reddy's-Workspace~d2872eff-7fe3-430b-878d-efc5c19962ce/collection/47554158-75713490-089a-41c4-8cb0-50ef52113b48?action=share&source=collection_link&creator=47554158"
	},
	"item": [
		{
			"name": "Create Token",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "All Booking Id's",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Booking Id by name",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Filter by checkin/checkout date",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Booking by specific id",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let data = pm.response.json();\r",
							"\r",
							"//  Booking ID check\r",
							"pm.test(\"Response has bookingid\", () => {\r",
							"    pm.expect(data).to.have.property(\"bookingid\");\r",
							"    pm.expect(data.bookingid).to.be.a(\"number\");\r",
							"});\r",
							"\r",
							"//  Validate booking object exists\r",
							"pm.test(\"Response has booking object\", () => {\r",
							"    pm.expect(data).to.have.property(\"booking\");\r",
							"    pm.expect(data.booking).to.be.an(\"object\");\r",
							"});\r",
							"\r",
							"//  Validate required fields\r",
							"pm.test(\"Booking object contains required fields\", () => {\r",
							"    let booking = data.booking;\r",
							"    pm.expect(booking).to.have.property(\"firstname\");\r",
							"    pm.expect(booking).to.have.property(\"lastname\");\r",
							"    pm.expect(booking).to.have.property(\"totalprice\");\r",
							"    pm.expect(booking).to.have.property(\"depositpaid\");\r",
							"    pm.expect(booking).to.have.property(\"bookingdates\");\r",
							"});\r",
							"\r",
							"//  Validate data types\r",
							"pm.test(\"Booking fields have correct types\", () => {\r",
							"    let booking = data.booking;\r",
							"    pm.expect(booking.firstname).to.be.a(\"string\");\r",
							"    pm.expect(booking.lastname).to.be.a(\"string\");\r",
							"    pm.expect(booking.totalprice).to.be.a(\"number\");\r",
							"    pm.expect(booking.depositpaid).to.be.a(\"boolean\");\r",
							"    pm.expect(booking.bookingdates).to.be.an(\"object\");\r",
							"    pm.expect(booking.bookingdates.checkin).to.be.a(\"string\");\r",
							"    pm.expect(booking.bookingdates.checkout).to.be.a(\"string\");\r",
							"    if (booking.additionalneeds) {\r",
							"        pm.expect(booking.additionalneeds).to.be.a(\"string\");\r",
							"    }\r",
							"});\r",
							"\r",
							"//  Save bookingid for future requests\r",
							"pm.environment.set(\"bookingId\", data.bookingid);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstname\" : \"Jim\",\r\n  \"lastname\" : \"Brown\",\r\n  \"totalprice\" : 111,\r\n  \"depositpaid\" : true,\r\n  \"bookingdates\" : {\r\n      \"checkin\" : \"2018-01-01\",\r\n      \"checkout\" : \"2019-01-01\"\r\n  },\r\n  \"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let data;\r",
							"\r",
							"pm.test(\"Response is valid JSON\", () => {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"    data = pm.response.json();\r",
							"});\r",
							"\r",
							"//  Validate required fields exist\r",
							"pm.test(\"Response contains all required fields\", () => {\r",
							"    pm.expect(data).to.have.property(\"firstname\");\r",
							"    pm.expect(data).to.have.property(\"lastname\");\r",
							"    pm.expect(data).to.have.property(\"totalprice\");\r",
							"    pm.expect(data).to.have.property(\"depositpaid\");\r",
							"    pm.expect(data).to.have.property(\"bookingdates\");\r",
							"});\r",
							"\r",
							"//  Validate updated firstname\r",
							"pm.test(\"Firstname is updated correctly\", () => {\r",
							"    pm.expect(data.firstname).to.eql(\"Jim\");\r",
							"});\r",
							"\r",
							"//  Validate data types\r",
							"pm.test(\"Field types are correct\", () => {\r",
							"    pm.expect(data.firstname).to.be.a(\"string\");\r",
							"    pm.expect(data.lastname).to.be.a(\"string\");\r",
							"    pm.expect(data.totalprice).to.be.a(\"number\");\r",
							"    pm.expect(data.depositpaid).to.be.a(\"boolean\");\r",
							"    pm.expect(data.bookingdates).to.be.an(\"object\");\r",
							"    pm.expect(data.bookingdates.checkin).to.be.a(\"string\");\r",
							"    pm.expect(data.bookingdates.checkout).to.be.a(\"string\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "token={{c5954635c4f8ccb}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstname\" : \"Jim\",\r\n  \"lastname\" : \"Brown\",\r\n  \"totalprice\" : 111,\r\n  \"depositpaid\" : true,\r\n  \"bookingdates\" : {\r\n      \"checkin\" : \"2018-01-01\",\r\n      \"checkout\" : \"2019-01-01\"\r\n  },\r\n  \"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/824\n",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"824\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Partial Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let data = pm.response.json();\r",
							"\r",
							"// ✅ Check firstname updated\r",
							"pm.test(\"Firstname updated correctly\", () => {\r",
							"    pm.expect(data.firstname).to.eql(\"Teja\");\r",
							"});\r",
							"\r",
							"// ✅ Check mandatory fields still exist\r",
							"pm.test(\"Other mandatory fields exist\", () => {\r",
							"    pm.expect(data).to.have.property(\"lastname\");\r",
							"    pm.expect(data).to.have.property(\"totalprice\");\r",
							"    pm.expect(data).to.have.property(\"depositpaid\");\r",
							"    pm.expect(data).to.have.property(\"bookingdates\");\r",
							"});\r",
							"\r",
							"// ✅ Validate field types\r",
							"pm.test(\"Field types are correct\", () => {\r",
							"    pm.expect(data.firstname).to.be.a(\"string\");\r",
							"    pm.expect(data.lastname).to.be.a(\"string\");\r",
							"    pm.expect(data.totalprice).to.be.a(\"number\");\r",
							"    pm.expect(data.depositpaid).to.be.a(\"boolean\");\r",
							"    pm.expect(data.bookingdates).to.be.an(\"object\");\r",
							"    pm.expect(data.bookingdates.checkin).to.be.a(\"string\");\r",
							"    pm.expect(data.bookingdates.checkout).to.be.a(\"string\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "token={{c5954635c4f8ccb}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Teja\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/:id",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		}
	]
}