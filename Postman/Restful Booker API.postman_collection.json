{
	"info": {
		"_postman_id": "5d2a098a-77de-4e64-8169-818a3ab14b51",
		"name": "Restful Booker API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47555747",
		"_collection_link": "https://gayathrithalapathi-6027885.postman.co/workspace/GayathriThalapathi's-Workspace~b4fcfcf8-b38a-49b0-8bdd-ef459f066b01/collection/47555747-5d2a098a-77de-4e64-8169-818a3ab14b51?action=share&source=collection_link&creator=47555747"
	},
	"item": [
		{
			"name": "Ping Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/ping",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth - Generate Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"pm.environment.set(\"token\", jsonData.token);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": [
				{
					"name": "Token",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": [
						{
							"key": "Content-Length",
							"value": "27"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Fri, 15 Aug 2025 16:17:37 GMT"
						},
						{
							"key": "Etag",
							"value": "W/\"1b-gKJykiIb42OwNgwBOtd5Pp7rqDw\""
						},
						{
							"key": "Nel",
							"value": "{\"report_to\":\"heroku-nel\",\"response_headers\":[\"Via\"],\"max_age\":3600,\"success_fraction\":0.01,\"failure_fraction\":0.1}"
						},
						{
							"key": "Report-To",
							"value": "{\"group\":\"heroku-nel\",\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?s=piEwyGqb6aogm0a99dY63%2BOQdfUKWHHGn0VRSc8uZGc%3D\\u0026sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add\\u0026ts=1755274657\"}],\"max_age\":3600}"
						},
						{
							"key": "Reporting-Endpoints",
							"value": "heroku-nel=\"https://nel.heroku.com/reports?s=piEwyGqb6aogm0a99dY63%2BOQdfUKWHHGn0VRSc8uZGc%3D&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&ts=1755274657\""
						},
						{
							"key": "Server",
							"value": "Heroku"
						},
						{
							"key": "Via",
							"value": "1.1 heroku-router"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						}
					],
					"cookie": [],
					"body": "{\n    \"token\": \"fb537c73bfc3b5a\"\n}"
				}
			]
		},
		{
			"name": "BookingId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));\r",
							"const list = pm.response.json();\r",
							"pm.expect(Array.isArray(list)).to.eql(true);\r",
							"\r",
							"// Save the first bookingId (if any) to the environment\r",
							"if (list.length) {\r",
							"  const id = list[0].bookingid ?? list[0];\r",
							"  pm.environment.set(\"bookingId\", String(id));\r",
							"}\r",
							"pm.test(\"bookingId captured (if any)\", () => pm.expect(pm.environment.get(\"bookingId\")).to.exist);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bookings-Get by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));\r",
							"const j = pm.response.json();\r",
							"pm.expect(j).to.have.property(\"firstname\");\r",
							"pm.expect(j).to.have.property(\"lastname\");\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{bookingId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Created (200/201)\", () => pm.expect([200,201]).to.include(pm.response.code));\r",
							"const j = pm.response.json();\r",
							"const id = j.bookingid ?? j.id;\r",
							"pm.environment.set(\"bookingId\", String(id));\r",
							"pm.test(\"bookingId saved\", () => pm.expect(pm.environment.get(\"bookingId\")).to.exist);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstname\": \"Gayathri\",\r\n  \"lastname\": \"Thalapathi\",\r\n  \"totalprice\": 111,\r\n  \"depositpaid\": true,\r\n  \"bookingdates\": { \"checkin\": \"2025-08-15\", \"checkout\": \"2025-08-20\" },\r\n  \"additionalneeds\": \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "update Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Updated (200)\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Firstname updated\", () => pm.expect(pm.response.json().firstname).to.eql(\"James\"));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstname\": \"James\",\r\n  \"lastname\": \"Brown\",\r\n  \"totalprice\": 111,\r\n  \"depositpaid\": true,\r\n  \"bookingdates\": {\r\n    \"checkin\": \"2025-08-14\",\r\n    \"checkout\": \"2025-08-15\"\r\n  },\r\n  \"additionalneeds\": \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{bookingId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Patched (200)\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Field updated\", () => pm.expect(pm.response.json()).to.have.property(\"additionalneeds\"));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"additionalneeds\": \"Late Checkout\" }\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{bookingId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Deleted (200/201/204)\", () => pm.expect([200,201,204]).to.include(pm.response.code));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/1",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"1"
					]
				}
			},
			"response": []
		}
	]
}